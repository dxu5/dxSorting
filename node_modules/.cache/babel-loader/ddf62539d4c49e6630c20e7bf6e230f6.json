{"ast":null,"code":"var _jsxFileName = \"/Users/derekxu/Documents/sorting/sorting/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from \"react\";\nimport { getMergeSortAnimations, getBubbleSortAnimations, getQuickSortAnimations, getHeapSortAnimations } from \"../sortingAlgorithms/sortingAlgorithms.js\";\nimport \"./SortingVisualizer.css\"; //Change this value for the speed of the animations\n\nconst ANIMATION_SPEED_MS = 1; //Change this value for the number of bars (value) in the array\n\nconst NUMBER_OF_ARRAY_BARS = 310;\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 640));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  mergeSort() {\n    const animations = getMergeSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 3 !== 2;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? \"red\" : \"turquoise\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  quickSort() {\n    const animations = getQuickSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n\n        if (arrayBars[barOneIdx] !== undefined) {\n          const barOneStyle = arrayBars[barOneIdx].style;\n        }\n\n        const color = i % 4 === 0 ? \"red\" : \"turquoise\";\n        setTimeout(() => {\n          if (arrayBars[barOneIdx] !== undefined) {\n            arrayBars[barOneIdx].style.backgroundColor = color;\n          }\n\n          if (arrayBars[barTwoIdx] !== undefined) {\n            arrayBars[barTwoIdx].style.backgroundColor = color;\n          }\n        }, i * 1);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n\n          if (arrayBars[barOneIdx] !== undefined) {\n            const barOneStyle = arrayBars[barOneIdx].style;\n            barOneStyle.height = `${newHeight}px`;\n          }\n        }, i * 1);\n      }\n    }\n  }\n\n  heapSort() {\n    const animations = getHeapSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n\n        if (arrayBars[barOneIdx] !== undefined) {\n          const barOneStyle = arrayBars[barOneIdx].style;\n        }\n\n        const color = i % 4 === 0 ? \"red\" : \"turquoise\";\n        setTimeout(() => {\n          if (arrayBars[barOneIdx] !== undefined) {\n            arrayBars[barOneIdx].style.backgroundColor = color;\n          }\n\n          if (arrayBars[barTwoIdx] !== undefined) {\n            arrayBars[barTwoIdx].style.backgroundColor = color;\n          }\n        }, i * 1);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n\n          if (arrayBars[barOneIdx] !== undefined) {\n            const barOneStyle = arrayBars[barOneIdx].style;\n            barOneStyle.height = `${newHeight}px`;\n          }\n        }, i * 1);\n      }\n    }\n  }\n\n  bubbleSort() {\n    const animations = getBubbleSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? \"red\" : \"turquoise\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * 1);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * 1);\n      }\n    }\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      class: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"navbar-brand\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, \"Derek's Sorting Visualizer\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"navbar-toggler\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarNav\",\n      \"aria-controls\": \"navbarNav\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"navbar-toggler-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"collapse navbar-collapse\",\n      id: \"navbarNav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"navbar-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"nav-item active\",\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"nav-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, \"Generate New Bars! \", /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 38\n      }\n    }, \"(current)\"))), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"nav-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \"Merge Sort\")), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"nav-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, \"Quick Sort\")), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"nav-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"Heap Sort\")), /*#__PURE__*/React.createElement(\"li\", {\n      class: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"nav-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, \"Bubble Sort\"))))), array.map((value, idx) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-bar\",\n      key: idx,\n      style: {\n        height: `${value}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, \"Generate New Bars!\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.mergeSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, \"Merge Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.quickSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, \"Quick Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.heapSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, \"Heap Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.bubbleSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, \"Bubble Sort\"));\n  }\n\n}\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["/Users/derekxu/Documents/sorting/sorting/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","getMergeSortAnimations","getBubbleSortAnimations","getQuickSortAnimations","getHeapSortAnimations","ANIMATION_SPEED_MS","NUMBER_OF_ARRAY_BARS","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","setState","mergeSort","animations","length","arrayBars","document","getElementsByClassName","isColorChange","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","quickSort","undefined","heapSort","bubbleSort","render","map","value","idx","min","max","Math","floor","random"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  getMergeSortAnimations,\n  getBubbleSortAnimations,\n  getQuickSortAnimations,\n  getHeapSortAnimations,\n} from \"../sortingAlgorithms/sortingAlgorithms.js\";\nimport \"./SortingVisualizer.css\";\n\n//Change this value for the speed of the animations\nconst ANIMATION_SPEED_MS = 1;\n\n//Change this value for the number of bars (value) in the array\n\nconst NUMBER_OF_ARRAY_BARS = 310;\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 640));\n    }\n    this.setState({ array });\n  }\n\n  mergeSort() {\n    const animations = getMergeSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? \"red\" : \"turquoise\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  quickSort() {\n    const animations = getQuickSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        if (arrayBars[barOneIdx] !== undefined) {\n          const barOneStyle = arrayBars[barOneIdx].style;\n        }\n        const color = i % 4 === 0 ? \"red\" : \"turquoise\";\n        setTimeout(() => {\n          if (arrayBars[barOneIdx] !== undefined) {\n            arrayBars[barOneIdx].style.backgroundColor = color;\n          }\n          if (arrayBars[barTwoIdx] !== undefined) {\n            arrayBars[barTwoIdx].style.backgroundColor = color;\n          }\n        }, i * 1);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          if (arrayBars[barOneIdx] !== undefined) {\n            const barOneStyle = arrayBars[barOneIdx].style;\n            barOneStyle.height = `${newHeight}px`;\n          }\n        }, i * 1);\n      }\n    }\n  }\n\n  heapSort() {\n    const animations = getHeapSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        if (arrayBars[barOneIdx] !== undefined) {\n          const barOneStyle = arrayBars[barOneIdx].style;\n        }\n        const color = i % 4 === 0 ? \"red\" : \"turquoise\";\n        setTimeout(() => {\n          if (arrayBars[barOneIdx] !== undefined) {\n            arrayBars[barOneIdx].style.backgroundColor = color;\n          }\n          if (arrayBars[barTwoIdx] !== undefined) {\n            arrayBars[barTwoIdx].style.backgroundColor = color;\n          }\n        }, i * 1);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          if (arrayBars[barOneIdx] !== undefined) {\n            const barOneStyle = arrayBars[barOneIdx].style;\n            barOneStyle.height = `${newHeight}px`;\n          }\n        }, i * 1);\n      }\n    }\n  }\n\n  bubbleSort() {\n    const animations = getBubbleSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? \"red\" : \"turquoise\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * 1);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * 1);\n      }\n    }\n  }\n\n  render() {\n    const { array } = this.state;\n    return (\n      <div className=\"array-container\">\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <a class=\"navbar-brand\" href=\"#\">\n            Derek's Sorting Visualizer\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav\">\n              <li class=\"nav-item active\" onClick={() => this.resetArray()}>\n                <a class=\"nav-link\">\n                  Generate New Bars! <span class=\"sr-only\">(current)</span>\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">\n                  Merge Sort\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">\n                  Quick Sort\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">\n                  Heap Sort\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">\n                  Bubble Sort\n                </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        {array.map((value, idx) => (\n          <div\n            className=\"array-bar\"\n            key={idx}\n            style={{ height: `${value}px` }}\n          ></div>\n        ))}\n        <button onClick={() => this.resetArray()}>Generate New Bars!</button>\n        <button onClick={() => this.mergeSort()}>Merge Sort</button>\n        <button onClick={() => this.quickSort()}>Quick Sort</button>\n        <button onClick={() => this.heapSort()}>Heap Sort</button>\n        <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\n      </div>\n    );\n  }\n}\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"]},"metadata":{},"sourceType":"module"}